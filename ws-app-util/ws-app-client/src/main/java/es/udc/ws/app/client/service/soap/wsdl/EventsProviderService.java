
package es.udc.ws.app.client.service.soap.wsdl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "EventsProviderService", targetNamespace = "http://soap.ws.udc.es/", wsdlLocation = "file:/home/hmia/workspace/JAVA-ISD/ws-app/ws-app-service/target/generated-sources/wsdl/EventsProviderService.wsdl")
public class EventsProviderService
    extends Service
{

    private final static URL EVENTSPROVIDERSERVICE_WSDL_LOCATION;
    private final static WebServiceException EVENTSPROVIDERSERVICE_EXCEPTION;
    private final static QName EVENTSPROVIDERSERVICE_QNAME = new QName("http://soap.ws.udc.es/", "EventsProviderService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/home/hmia/workspace/JAVA-ISD/ws-app/ws-app-service/target/generated-sources/wsdl/EventsProviderService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        EVENTSPROVIDERSERVICE_WSDL_LOCATION = url;
        EVENTSPROVIDERSERVICE_EXCEPTION = e;
    }

    public EventsProviderService() {
        super(__getWsdlLocation(), EVENTSPROVIDERSERVICE_QNAME);
    }

    public EventsProviderService(WebServiceFeature... features) {
        super(__getWsdlLocation(), EVENTSPROVIDERSERVICE_QNAME, features);
    }

    public EventsProviderService(URL wsdlLocation) {
        super(wsdlLocation, EVENTSPROVIDERSERVICE_QNAME);
    }

    public EventsProviderService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, EVENTSPROVIDERSERVICE_QNAME, features);
    }

    public EventsProviderService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public EventsProviderService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns EventsProvider
     */
    @WebEndpoint(name = "EventsProviderPort")
    public EventsProvider getEventsProviderPort() {
        return super.getPort(new QName("http://soap.ws.udc.es/", "EventsProviderPort"), EventsProvider.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns EventsProvider
     */
    @WebEndpoint(name = "EventsProviderPort")
    public EventsProvider getEventsProviderPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.ws.udc.es/", "EventsProviderPort"), EventsProvider.class, features);
    }

    private static URL __getWsdlLocation() {
        if (EVENTSPROVIDERSERVICE_EXCEPTION!= null) {
            throw EVENTSPROVIDERSERVICE_EXCEPTION;
        }
        return EVENTSPROVIDERSERVICE_WSDL_LOCATION;
    }

}
